{"version":3,"file":"digitalascetic-ngx-pica.js.map","sources":["ng://@digitalascetic/ngx-pica/lib/ngx-pica-error.interface.ts","ng://@digitalascetic/ngx-pica/lib/ngx-pica-exif.service.ts","ng://@digitalascetic/ngx-pica/lib/ngx-pica.service.ts","ng://@digitalascetic/ngx-pica/lib/ngx-pica-image.service.ts","ng://@digitalascetic/ngx-pica/lib/ngx-pica.module.ts"],"sourcesContent":["export enum NgxPicaErrorType {\n    NO_FILES_RECEIVED = 'NO_FILES_RECEIVED',\n    CANVAS_CONTEXT_IDENTIFIER_NOT_SUPPORTED = 'CANVAS_CONTEXT_IDENTIFIER_NOT_SUPPORTED',\n    NOT_BE_ABLE_TO_COMPRESS_ENOUGH = 'NOT_BE_ABLE_TO_COMPRESS_ENOUGH'\n}\n\nexport interface NgxPicaError {\n    err: NgxPicaErrorType;\n    file?: File;\n}\n","import { Injectable } from '@angular/core';\nimport * as EXIF from 'exif-js';\n\n@Injectable()\nexport class NgxPicaExifService {\n\n    public getExifOrientedImage(image: HTMLImageElement): Promise<HTMLImageElement> {\n        return new Promise<HTMLImageElement>((resolve, reject) => {\n            EXIF.getData((image as any), () => {\n                const allExifMetaData = EXIF.getAllTags(image),\n                    exifOrientation = allExifMetaData.Orientation;\n\n                if (exifOrientation) {\n\n                    if (!/^[1-8]$/.test(exifOrientation)) {\n                        throw new Error('orientation should be [1-8]');\n                    }\n\n                    const canvas: HTMLCanvasElement = document.createElement('canvas'),\n                        ctx = canvas.getContext('2d');\n\n                    let deg = 0,\n                        cx = 0,\n                        cy = 0,\n                        width: number = image.width,\n                        height: number = image.height;\n\n                    if ([5, 6, 7, 8].indexOf(exifOrientation) > -1) {\n                        width = image.height;\n                        height = image.width;\n                    }\n\n                    canvas.width = width;\n                    canvas.height = height;\n\n                    switch (exifOrientation) {\n                        case 3:\n                        case 4:\n                            cx = -image.width;\n                            cy = -image.height;\n                            deg = 180;\n                            break;\n                        case 5:\n                        case 6:\n                            cy = -image.height;\n                            deg = 90;\n                            break;\n                        case 7:\n                        case 8:\n                            cx = -image.width;\n                            deg = 270;\n                            break;\n                        default:\n                            break;\n                    }\n\n                    if ([2, 4, 5, 7].indexOf(exifOrientation) > -1) {\n                        ctx.translate(width, 0);\n                        ctx.scale(-1, 1);\n                    }\n\n                    ctx.rotate(deg / 180 * Math.PI);\n                    ctx.drawImage(image, cx, cy);\n\n                    const img = new Image();\n\n                    img.width = width;\n                    img.height = height;\n\n                    img.onload = () => {\n                        resolve(img);\n                    };\n\n                    img.src = canvas.toDataURL();\n                } else {\n                    resolve(image);\n                }\n            });\n        });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable, Subscription } from 'rxjs';\nimport { NgxPicaError, NgxPicaErrorType } from './ngx-pica-error.interface';\nimport { NgxPicaResizeOptions } from './ngx-pica-resize-options.interface';\nimport { NgxPicaExifService } from './ngx-pica-exif.service';\nimport Pica from 'pica/dist/pica.js';\n\ndeclare let window: any;\n\n@Injectable()\nexport class NgxPicaService {\n    private picaResizer = new Pica();\n    private MAX_STEPS = 20;\n\n    constructor(private _ngxPicaExifService: NgxPicaExifService) {\n        if (!this.picaResizer || !this.picaResizer.resize) {\n            this.picaResizer = new Pica();\n        }\n    }\n\n    public resizeImages(\n        files: File[],\n        width: number,\n        height: number,\n        options?: NgxPicaResizeOptions\n    ): Observable<File> {\n        const resizedImage: Subject<File> = new Subject();\n        const totalFiles: number = files.length;\n\n        if (totalFiles > 0) {\n            const nextFile: Subject<File> = new Subject();\n            let index = 0;\n\n            const subscription: Subscription = nextFile.subscribe((file: File) => {\n                this.resizeImage(file, width, height, options).subscribe(imageResized => {\n                    index++;\n                    resizedImage.next(imageResized);\n                    if (index < totalFiles) {\n                        nextFile.next(files[index]);\n                    } else {\n                        resizedImage.complete();\n                        subscription.unsubscribe();\n                    }\n                }, (err) => {\n                    const ngxPicaError: NgxPicaError = {\n                        file: file,\n                        err: err\n                    };\n\n                    resizedImage.error(ngxPicaError);\n                });\n            });\n\n            nextFile.next(files[index]);\n        } else {\n            const ngxPicaError: NgxPicaError = {\n                err: NgxPicaErrorType.NO_FILES_RECEIVED\n            };\n            resizedImage.error(ngxPicaError);\n            resizedImage.complete();\n        }\n\n        return resizedImage.asObservable();\n    }\n\n    public resizeImage(\n        file: File,\n        width: number,\n        height: number,\n        options?: NgxPicaResizeOptions\n    ): Observable<File> {\n        const resizedImage: Subject<File> = new Subject();\n        const originCanvas: HTMLCanvasElement = document.createElement('canvas');\n        const ctx = originCanvas.getContext('2d');\n        const img = new Image();\n\n        if (ctx) {\n            img.onload = () => {\n                this._ngxPicaExifService.getExifOrientedImage(img).then(orientedImage => {\n                    window.URL.revokeObjectURL(img.src);\n                    originCanvas.width = orientedImage.width;\n                    originCanvas.height = orientedImage.height;\n\n                    ctx.drawImage(orientedImage, 0, 0);\n\n                    const imageData = ctx.getImageData(0, 0, orientedImage.width, orientedImage.height);\n                    if (options && options.aspectRatio && options.aspectRatio.keepAspectRatio) {\n                        let ratio = 0;\n                        if (options.aspectRatio.forceMinDimensions) {\n                            ratio = Math.max(width / imageData.width, height / imageData.height);\n                        } else {\n                            ratio = Math.min(width / imageData.width, height / imageData.height);\n                        }\n                        width = Math.round(imageData.width * ratio);\n                        height = Math.round(imageData.height * ratio);\n                    }\n\n                    const destinationCanvas: HTMLCanvasElement = document.createElement('canvas');\n                    destinationCanvas.width = width;\n                    destinationCanvas.height = height;\n\n                    this.picaResize(file, originCanvas, destinationCanvas, options)\n                        .then((imgResized: File) => resizedImage.next(imgResized))\n                        .catch((err) => resizedImage.error(err));\n                });\n            };\n            img.src = window.URL.createObjectURL(file);\n        } else {\n            resizedImage.error(NgxPicaErrorType.CANVAS_CONTEXT_IDENTIFIER_NOT_SUPPORTED);\n        }\n\n        return resizedImage.asObservable();\n    }\n\n    public compressImages(files: File[], sizeInMB: number): Observable<File> {\n        const compressedImage: Subject<File> = new Subject();\n        const totalFiles: number = files.length;\n\n        if (totalFiles > 0) {\n            const nextFile: Subject<File> = new Subject();\n            let index = 0;\n\n            const subscription: Subscription = nextFile.subscribe((file: File) => {\n                this.compressImage(file, sizeInMB).subscribe(imageCompressed => {\n                    index++;\n                    compressedImage.next(imageCompressed);\n                    if (index < totalFiles) {\n                        nextFile.next(files[index]);\n                    } else {\n                        compressedImage.complete();\n                        subscription.unsubscribe();\n                    }\n                }, (err) => {\n                    const ngxPicaError: NgxPicaError = {\n                        file: file,\n                        err: err\n                    };\n                    compressedImage.error(ngxPicaError);\n                });\n            });\n\n            nextFile.next(files[index]);\n        } else {\n            const ngxPicaError: NgxPicaError = {\n                err: NgxPicaErrorType.NO_FILES_RECEIVED\n            };\n            compressedImage.error(ngxPicaError);\n            compressedImage.complete();\n        }\n\n        return compressedImage.asObservable();\n    }\n\n    public compressImage(file: File, sizeInMB: number): Observable<File> {\n        const compressedImage: Subject<File> = new Subject();\n\n        if (this.bytesToMB(file.size) <= sizeInMB) {\n            setTimeout(() => compressedImage.next(file));\n        } else {\n            const originCanvas: HTMLCanvasElement = document.createElement('canvas');\n            const ctx = originCanvas.getContext('2d');\n            const img = new Image();\n\n            if (ctx) {\n                img.onload = () => {\n                    this._ngxPicaExifService.getExifOrientedImage(img).then(orientedImage => {\n                        window.URL.revokeObjectURL(img.src);\n                        originCanvas.width = orientedImage.width;\n                        originCanvas.height = orientedImage.height;\n\n                        ctx.drawImage(orientedImage, 0, 0);\n\n                        this.getCompressedImage(originCanvas, file.type, 1, sizeInMB, 0)\n                            .catch((err) => compressedImage.error(err))\n                            .then((blob: Blob) => {\n                                const imgCompressed: File = this.blobToFile(blob, file.name, file.type, new Date().getTime());\n                                compressedImage.next(imgCompressed);\n                            });\n                    });\n                };\n\n                img.src = window.URL.createObjectURL(file);\n            } else {\n                compressedImage.error(NgxPicaErrorType.CANVAS_CONTEXT_IDENTIFIER_NOT_SUPPORTED);\n            }\n        }\n\n        return compressedImage.asObservable();\n    }\n\n    private getCompressedImage(\n        canvas: HTMLCanvasElement,\n        type: string,\n        quality: number,\n        sizeInMB: number,\n        step: number\n    ): Promise<Blob> {\n        return new Promise<Blob>((resolve, reject) => {\n            this.picaResizer.toBlob(canvas, type, quality)\n                .catch((err) => reject(err))\n                .then((blob: Blob) => {\n                    this.checkCompressedImageSize(canvas, blob, quality, sizeInMB, step)\n                        .then((compressedBlob: Blob) => resolve(compressedBlob))\n                        .catch((err) => reject(err));\n                });\n        });\n    }\n\n    private checkCompressedImageSize(\n        canvas: HTMLCanvasElement,\n        blob: Blob,\n        quality: number,\n        sizeInMB: number,\n        step: number\n    ): Promise<Blob> {\n        return new Promise<Blob>((resolve, reject) => {\n            if (step > this.MAX_STEPS) {\n                reject(NgxPicaErrorType.NOT_BE_ABLE_TO_COMPRESS_ENOUGH);\n            } else if (this.bytesToMB(blob.size) < sizeInMB) {\n                resolve(blob);\n            } else {\n                const newQuality: number = quality - (quality * 0.1);\n                const newStep: number = step + 1;\n                // recursively compression\n                resolve(this.getCompressedImage(canvas, blob.type, newQuality, sizeInMB, newStep));\n            }\n        });\n    }\n\n    private picaResize(\n        file: File,\n        from: HTMLCanvasElement,\n        to: HTMLCanvasElement,\n        options: any\n    ): Promise<File> {\n        return new Promise<File>((resolve, reject) => {\n            this.picaResizer.resize(from, to, options)\n                .catch((err) => reject(err))\n                .then((resizedCanvas: HTMLCanvasElement) => this.picaResizer.toBlob(resizedCanvas, file.type))\n                .then((blob: Blob) => {\n                    const fileResized: File = this.blobToFile(blob, file.name, file.type, new Date().getTime());\n                    resolve(fileResized);\n                });\n        });\n    }\n\n    private blobToFile(blob: Blob, name: string, type: string, lastModified: number): File {\n        return new File([blob], name, { type: type, lastModified: lastModified });\n    }\n\n    private bytesToMB(bytes: number) {\n        return bytes / 1048576;\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NgxPicaImageService {\n\n    private imageExtensions: string[] = [\n        'ase',\n        'art',\n        'bmp',\n        'blp',\n        'cd5',\n        'cit',\n        'cpt',\n        'cr2',\n        'cut',\n        'dds',\n        'dib',\n        'djvu',\n        'egt',\n        'exif',\n        'gif',\n        'gpl',\n        'grf',\n        'icns',\n        'ico',\n        'iff',\n        'jng',\n        'jpeg',\n        'jpg',\n        'jfif',\n        'jp2',\n        'jps',\n        'lbm',\n        'max',\n        'miff',\n        'mng',\n        'msp',\n        'nitf',\n        'ota',\n        'pbm',\n        'pc1',\n        'pc2',\n        'pc3',\n        'pcf',\n        'pcx',\n        'pdn',\n        'pgm',\n        'PI1',\n        'PI2',\n        'PI3',\n        'pict',\n        'pct',\n        'pnm',\n        'pns',\n        'ppm',\n        'psb',\n        'psd',\n        'pdd',\n        'psp',\n        'px',\n        'pxm',\n        'pxr',\n        'qfx',\n        'raw',\n        'rle',\n        'sct',\n        'sgi',\n        'rgb',\n        'int',\n        'bw',\n        'tga',\n        'tiff',\n        'tif',\n        'vtf',\n        'xbm',\n        'xcf',\n        'xpm',\n        '3dv',\n        'amf',\n        'ai',\n        'awg',\n        'cgm',\n        'cdr',\n        'cmx',\n        'dxf',\n        'e2d',\n        'egt',\n        'eps',\n        'fs',\n        'gbr',\n        'odg',\n        'svg',\n        'stl',\n        'vrml',\n        'x3d',\n        'sxd',\n        'v2d',\n        'vnd',\n        'wmf',\n        'emf',\n        'art',\n        'xar',\n        'png',\n        'webp',\n        'jxr',\n        'hdp',\n        'wdp',\n        'cur',\n        'ecw',\n        'iff',\n        'lbm',\n        'liff',\n        'nrrd',\n        'pam',\n        'pcx',\n        'pgf',\n        'sgi',\n        'rgb',\n        'rgba',\n        'bw',\n        'int',\n        'inta',\n        'sid',\n        'ras',\n        'sun',\n        'tga'\n    ];\n\n    public isImage(file: File): boolean {\n        const fileExtension: string = file.name.toLowerCase().substr(file.name.lastIndexOf('.') + 1);\n        return (this.imageExtensions.indexOf(fileExtension) !== -1);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxPicaService } from './ngx-pica.service';\nimport { NgxPicaExifService } from './ngx-pica-exif.service';\nimport { NgxPicaImageService } from './ngx-pica-image.service';\n\n@NgModule({\n    providers: [\n        { provide: NgxPicaService, useClass: NgxPicaService },\n        { provide: NgxPicaExifService, useClass: NgxPicaExifService },\n        { provide: NgxPicaImageService, useClass: NgxPicaImageService },\n    ]\n})\nexport class NgxPicaModule { }\n"],"names":["EXIF.getData","EXIF.getAllTags"],"mappings":"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"}
